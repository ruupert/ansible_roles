# {{ ansible_managed }}

default-lease-time {{ dhcpd_default_lease }};
max-lease-time {{ dhcpd_max_lease }};
ddns-update-style none;
{% if dhcpd_authorative %}
authoritative;
{% endif %}

{% if dhcpd_ha %}
failover peer "dhcp-failover" {
  address {{ ansible_host}};
{% if dhcpd_primary %}
  primary;
  port {{ dhcpd_ha_port }};
  peer address {{ hostvars[dhcpd_secondary_peer].ansible_host }};
  peer port {{ dhcpd_ha_port }};
  mclt {{ dhcpd_mclt }};
  split {{ dhcpd_split }};
{% else %}
  secondary;
  port {{ dhcpd_ha_port }};
  peer address {{ hostvars[dhcpd_primary_peer].ansible_host }};
  peer port {{ dhcpd_ha_port }};
{% endif %}
  max-unacked-updates {{ dhcpd_max_unacked_updates }};
  load balance max seconds {{ dhcpd_load_balance_max_seconds }};
}
{% endif %}

{% for no_service in dhcpd_no_service %}
subnet {{ no_service.subnet }} netmask {{ no_service.netmask }} {
}
{% endfor %}

{% for service in dhcpd_subnets %}
subnet {{ service.subnet }} netmask {{ service.netmask }} {
  option routers {{ service.gateway }};
  option broadcast-address {{ service.broadcast }};
  option domain-name-servers {{ service.nameserver }};

{% if service.search is defined %}
  option domain-search "{{ service.search }}";
{% endif %}

  pool {
{% if service.class != "none" %}
  allow members of "{{ service.class }}";
{% endif %}
{% if dhcpd_ha %}
    failover peer "dhcp-failover";
{% endif %}
    range {{ service.start }} {{ service.stop }};
  }
}
{% endfor %}

{% for fixed_addr in dhcpd_fixed_addresses %}
host {{ fixed_addr.name}} {
{% if fixed_addr.class is defined %}
  option dhcp-client-identifier 1:{{ fixed_addr.hw }};
{% endif %}
  hardware ethernet {{ fixed_addr.hw }};
  fixed-address {{ fixed_addr.ip }};
}

{% endfor %}
