# {{ ansible_managed }}
{% if loop_site.backends is defined %}
{% for backend, values in loop_site.backends.items() %}
upstream {{ backend }} {
{% for server in values.servers %}
        server {{ server }};
}
{% endfor %}
{% endfor %}

{% else %}
{% if loop_site.servers is defined %}
upstream backend {
{% for server in loop_site.servers %}
        server {{ server }};
{% endfor %}
}
{% endif %}
{% endif %}

server {
{% if nginx_htpasswd is defined %}
                auth_basic "Authorized accss";
                auth_basic_user_file "{{ nginx_etc_dir }}/htpasswd";
{% endif %}

{% if loop_site.letsencrypt is defined %}
        ssl_certificate /etc/letsencrypt/live/{{ loop_site.server_name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ loop_site.server_name }}/privkey.pem;
        listen {{ nginx_https_port }} ssl;
{% elif ansible_hostname in nginx_ssl_hosts %}
        ssl_certificate /etc/ssl/certs/{{ ansible_hostname }}.{{ domain }}.pem;
        ssl_certificate_key /etc/ssl/private/{{ ansible_hostname }}.{{ domain }}.key;
        listen {{ nginx_https_port }} ssl;
{% else %}
        listen {{ nginx_http_port }};
{% endif%}

        root {{ loop_site.root | default("/var/www/html") }};

        index index.html index.htm index.nginx-debian.html;
        server_name {{ loop_site.name }};
        
{% if nginx_favicon is defined %}
        location = /favicon.ico {
                alias /usr/local/www/favicon.ico;
        }
{% endif %}


{% if loop_site.backends is defined %}
{% for backend, values in loop_site.backends.items() %}
        location {{ values.location }} {
                gzip off;
                aio threads;
                autoindex {{ loop_site.autoindex | default('off') }};
                autoindex_exact_size off;
                autoindex_format html;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_pass {{ loop_site.proto | default('http') }}://{{ backend }};
                #try_files $uri $uri/ =404;
        }
{% endfor %}
{% else %}
        location / {
                gzip off;
                aio threads;
                autoindex {{ loop_site.autoindex | default('off') }};
                autoindex_exact_size off;
                autoindex_format html;
{% if loop_site.reverse_proxy %}
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_pass {{ loop_site.proto | default('http') }}://backend;
{% else %}
                root {{ loop_site.root | default("/var/www/html") }};
{% endif %}
                #try_files $uri $uri/ =404;
        }
{% if loop_site.reverse_sub_location is defined %}
        location {{ loop_site.reverse_sub_location }} {
                proxy_pass {{ loop_site.proto | default('http') }}://backend/;
        }
{% endif %}
{% endif %}
}

{% if ansible_hostname in nginx_ssl_hosts or loop_site.letsencrypt is defined %}
server {
        listen {{ nginx_http_port }};
        return 301 https://$host$request_uri;
        server_name {{ loop_site.name }};

}
{% endif%}
