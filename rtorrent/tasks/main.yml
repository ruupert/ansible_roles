---
# tasks file for rtorrent

- name: "Install and configure rtorrent"
  tags:
    - rtorrent
  block:
    - name: "Ensure rtorrent user exists"
      ansible.builtin.user:
        name: "{{ rtorrent_user }}"
        home: "{{ rtorrent_home }}"
        shell: "/usr/sbin/nologin"
        create_home: true

    - name: "Install dependencies"
      ansible.builtin.apt:
        pkg:
          - "rtorrent"
          - "tmux"
          - "acl"
          - "curl"
          - "lighttpd"
        state: "present"

    - name: "Copy rtorrentrc to target"
      ansible.builtin.template:
        src: "templates/dotrtorrentrc.j2"
        dest: "{{ rtorrent_home }}/.rtorrent.rc"
        owner: "ruupert"
        group: "ruupert"
        mode: "0600"
      register: rtorrent_rc_reg

    - name: "Lighthttpd docroot"
      ansible.builtin.file:
        path: "{{ rtorrent_home }}/.lighthttpdroot"
        state: directory
        mode: "0755"
        owner: "{{ rtorrent_user }}"
        group: "{{ rtorrent_user }}"

    - name: "Setfacl permissions for other"
      ansible.posix.acl:
        default: true
        etype: other
        follow: false
        recursive: true
        path: "{{ rtorrent_dir }}/download"
        permissions: rx
        state: present

    - name: "Write rtorrent_notify.sh"
      ansible.builtin.template:
        src: "templates/rtorrent_notify.sh.j2"
        dest: "{{ rtorrent_dir }}/rtorrent_notify.sh"
        owner: "{{ rtorrent_user }}"
        group: "{{ rtorrent_user }}"
        mode: "0755"
      when:
        - rtorrent_webhook_url is defined

    - name: "Write or update systemd rtorrent.service unit file"
      ansible.builtin.template:
        src: "templates/rtorrent_systemd_service.j2"
        dest: "/etc/systemd/system/rtorrent.service"
        owner: "root"
        group: "root"
        mode: "0755"
      register: rtorrent_systemd_unit_reg

    - name: "Write or update rtorrent_lighthttpd.conf"
      ansible.builtin.template:
        src: "templates/lighthttpd.conf.j2"
        dest: "{{ rtorrent_home }}/.rtorrent_lighthttpd.conf"
        owner: "root"
        group: "root"
        mode: "0755"
      register: rtorrent_lighthttpd_reg

    - name: "Write or update systemd lighthttpd.service unit file"
      ansible.builtin.template:
        src: "templates/lighthttpd.service.j2"
        dest: "/etc/systemd/system/lighthttpd.service"
        owner: "root"
        group: "root"
        mode: "0755"
      register: rtorrent_lighthttpd_systemd_unit_reg

    - name: "Start service lighthttpd.service"
      ansible.builtin.systemd:
        state: started
        enabled: true
        daemon_reload: true
        name: lighthttpd

    - name: "Start service lighthttpd.service"
      ansible.builtin.systemd:
        state: stopped
        enabled: false
        name: lighttpd

    - name: "Start service rtorrent.service"
      ansible.builtin.systemd:
        state: started
        enabled: true
        daemon_reload: true
        name: rtorrent

    - name: "Stop rtorrent.service" # noqa: no-handler
      ansible.builtin.systemd:
        state: stopped
        name: rtorrent
      when: rtorrent_systemd_unit_reg.changed or rtorrent_rc_reg.changed

    - name: "Start rtorrent.service" # noqa: no-handler
      ansible.builtin.systemd:
        state: started
        name: rtorrent
      when: rtorrent_systemd_unit_reg.changed or rtorrent_rc_reg.changed

  rescue:
    - name: Failed
      ansible.builtin.debug:
        msg: "{{ ansible_failed_task }}: {{ ansible_failed_result.msg }}"
      notify: 
        - send failed message 

- name: "Flush handlers"
  tags:
    - rtorrent
  ansible.builtin.meta: flush_handlers
