# # "3 Network Configuration... 172"
# # "3.1 Disable unused network protocols and devices... 173" - name:
# - name: "3.1.1 Disable IPv6 (Manual) .... 174"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message

#
#  Not applicable as there are no wireless interfaces in openstack
#
# - name: "3.1.2 Ensure wireless interfaces are disabled (Automated) ..... 176"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# # "3.2 Network Parameters (Host Only) .. 178"
- name: '3.2.1 Ensure packet redirect sending is disabled (Automated) ...... 179'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Disable ICMP redirects (net.ipv4.conf.all.send_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
    - name: 'Disable ICMP redirects (net.ipv4.conf.default.send_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
  # - name: placeholder for if needed:
  #  sysctl -w net.ipv4.conf.all.send_redirects=0
  #  sysctl -w net.ipv4.conf.default.send_redirects=0
  #  sysctl -w net.ipv4.route.flush=1
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.2.2 Ensure IP forwarding is disabled (Automated) .... 181'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Disable IPv4 forwarding (net.ipv4.ip_forward = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '0'
    - name: 'Disable IPv6 forwarding (net.ipv6.conf.all.forwarding = 0)'
      ansible.posix.sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '0'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

# # "3.3 Network Parameters (Host and Router) ... 183"


# - name: "3.3.1 Ensure source routed packets are not accepted (Automated) .... 184"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#   - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       -  send failed message to slack
#
- name: '3.3.2 Ensure ICMP redirects are not accepted (Automated) .... 188'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Disable ICMP redirects (net.ipv4.conf.all.accept_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '0'
    - name: 'Disable ICMP redirects (net.ipv4.conf.default.accept_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '0'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.3.2 Ensure ICMP6 redirects are not accepted (Automated) .... 188'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Disable ICMP redirects (net.ipv6.conf.all.accept_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: '0'
    - name: 'Disable ICMP redirects (net.ipv6.conf.default.accept_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: '0'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true

- name: '3.3.3 Ensure secure ICMP redirects are not accepted (Automated) .... 191'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Disable secure ICMP redirects (net.ipv4.conf.all.secure_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '0'
    - name: 'Disable secure ICMP redirects (net.ipv4.conf.default.secure_redirects = 0)'
      ansible.posix.sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: '0'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

# - name: "3.3.4 Ensure suspicious packets are logged (Automated) .. 193"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
- name: '3.3.5 Ensure broadcast ICMP requests are ignored (Automated) . 195'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Ignore broacast echo requests (net.ipv4.icmp_echo_ignore_broadcasts = 1)'
      ansible.posix.sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '1'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.3.6 Ensure bogus ICMP responses are ignored (Automated) ...... 197'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Ignore bogus echo error responses (net.ipv4.icmp_ignore_bogus_error_responses = 1)'
      ansible.posix.sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '1'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

#
#   TEST THIS FIRST
#
# - name: "3.3.7 Ensure Reverse Path Filtering is enabled (Automated)... 199"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
- name: '3.3.8 Ensure TCP SYN Cookies is enabled (Automated) ...... 201'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Enable TCP SYN cookies (net.ipv4.tcp_syncookies = 1)'
      ansible.posix.sysctl:
        name: net.ipv4.tcp_syncookies
        value: '1'
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

# - name: "3.3.9 Ensure IPv6 router advertisements are not accepted (Automated)  203"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message

# # "3.4 Uncommon Network Protocols ...... 205"
- name: '3.4.0 Copy uncommon protocols modprobe blacklist 205'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Copy modprobe blacklist file over'
      ansible.builtin.copy:
        src: "files/{{ ansible_distribution_release }}3.4/uncommon.conf"
        dest: /etc/modprobe.d/uncommon.conf
        owner: root
        group: root
        mode: "0644"
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.4.1 Ensure DCCP is disabled (Automated)  206'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Ensure DCCP module is not present'
      community.general.modprobe:
        name: dccp
        state: absent
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.4.2 Ensure SCTP is disabled (Automated) . 208'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Ensure SCTP module is not present'
      community.general.modprobe:
        name: sctp
        state: absent
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.4.3 Ensure RDS is disabled (Automated) ... 210'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Ensure rds module is not present'
      community.general.modprobe:
        name: rds
        state: absent
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

- name: '3.4.4 Ensure TIPC is disabled (Automated) .. 211'
  tags:
    - cis
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
  block:
    - name: 'Ensure TIPC module is not present'
      community.general.modprobe:
        name: tipc
        state: absent
  rescue:
    - name: 'Send failure message'
      ansible.builtin.debug:
        msg: 'fail'
      changed_when: true
      notify:
        - send failed message

# # "3.5 Firewall Configuration .. 212"

# - name: "3.5.1 Configure UncomplicatedFirewall ...... 213"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.1 Ensure ufw is installed (Automated)  214"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.2 Ensure iptables-persistent is not installed with ufw (Automated) ..... 216"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.3 Ensure ufw service is enabled (Automated)  217"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.4 Ensure ufw loopback traffic is configured (Automated) ..... 219"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.5 Ensure ufw outbound connections are configured (Manual) .. 221"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.6 Ensure ufw firewall rules exist for all open ports (Manual) ..... 222"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.1.7 Ensure ufw default deny firewall policy (Automated) . 224"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2 Configure nftables .. 226"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.1 Ensure nftables is installed (Automated) ..... 229"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.2 Ensure ufw is uninstalled or disabled with nftables (Automated) ...... 231"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.3 Ensure iptables are flushed with nftables (Manual)...... 233"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.4 Ensure a nftables table exists (Automated) . 235"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.5 Ensure nftables base chains exist (Automated)  237"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.6 Ensure nftables loopback traffic is configured (Automated) ... 239"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.7 Ensure nftables outbound and established connections are configured (Manual) ...... 241"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.8 Ensure nftables default deny firewall policy (Automated)  243"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.9 Ensure nftables service is enabled (Automated) ..... 245"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.2.10 Ensure nftables rules are permanent (Automated) .... 246"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3 Configure iptables... 249"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.1.1 Ensure iptables packages are installed (Automated)  251"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.1.2 Ensure nftables is not installed with iptables (Automated) . 252"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.1.3 Ensure ufw is uninstalled or disabled with iptables (Automated) ... 253"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.2.1 Ensure iptables default deny firewall policy (Automated) ... 256"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.2.2 Ensure iptables loopback traffic is configured (Automated)  258"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.2.3 Ensure iptables outbound and established connections are configured (Manual) ...... 260"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.2.4 Ensure iptables firewall rules exist for all open ports (Automated) ...... 262"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.3.1 Ensure ip6tables default deny firewall policy (Automated) . 265"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.3.2 Ensure ip6tables loopback traffic is configured (Automated) .... 267"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.3.3 Ensure ip6tables outbound and established connections are configured (Manual) ...... 269"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
# - name: "3.5.3.3.4 Ensure ip6tables firewall rules exist for all open ports (Automated).... 271"
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
#   block:
#    - name: placeholder
#   rescue:
#   - name: "Send failure message"
#     debug:
#       msg: "fail"
#     changed_when: true
#     ansible.builtin.notify:
#       - send failed message
